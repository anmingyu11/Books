cat命令:
	cat ~ concatenate
	cat file1 file2 file3 ..
	echo 'Text through stdin' | cat - file.txt -被作为来自stdin文本的额文件名
	cat -s file 压缩连续的空白行
	cat multi_blanks.txt | tr -s '\n' 用tr移除空白行
	cat -T 将制表符标记成 ^|
	cat -n 在每一行内容前加上行号
script- scriptreplay 录制与回放终端会话:
------
find命令:
	工作方式：沿着文件层次结构向下遍历，匹配符合条件的文件，并执行相应的操作。
	find base_path 列出当前目录及子目录下所有的文件和文件夹
find根据文件名或正则表达式匹配搜索:
	find . -name "*.txt" -print
	-iname选项，忽略字母大小写
	or条件操作: find . \( -name "*.txt" -o -name "*.pdf"\) -print
	-path参数可以使用通配符来匹配文件路径或文件 -name总是用给定的文件名进行匹配。-path则将文件路径作为一个整体进行匹配
	-regex和-path类似，不过-regex是基于正则表达式来匹配文件路径的 -iregex用于忽略正则表达式的大小写
	否定参数 find . ! -name "*.txt"
基于目录深度的搜索:
	find会遍历所有子目录 用-maxdepth和-mindepth来限制深度	
根据文件类型搜索:
	-type f 普通文件
	-type l 符号链接 ---???
	-type d 目录
	-type c 字符设备 ---???
	-type b 块设备   ---???
	-type s 套接字   ---???
	-type p Fifo     ---???
根据文件时间进行搜索
	-atime 访问时间
	-mtime 修改时间
	-ctime 文件元数据(例如权限或所有权)最后一次改变的时间
	计量单位 /天 -cmin 分钟
	Unix中并没有所谓"创建时间"的概念
	find -atime -7 7 +7 访问最近七天， 恰好七天， 超过七天
	find . -newer file 找出比file修改时间更长的文件
	find .-type -size +/-/2k 基于大小搜索 单位b/c/w/k/m/g
删除匹配的文件
	find . -type f -name "*.swp" -delete
文件权限和所有权的匹配
	find . -type f -perm 644 -print
结合find执行命令或动作
	find . -type f -user root -exec chown slynux {} \;
	{}会被该文件名所替换
	find命令找到的文件 file1 file2 会被解析为chown slynux file1 和 chown slynux file2
	find . -type f -name "*.c" -exec cat{} \; >allcfiles.txt 讲给定目录中的所有C程序文件拼接起来写入allcfiles.没有追加的原因是因为find命令的全部输出只是一个单数据流，而只有当多个数据流被追加到单个文件中的时候才有必要用>>
	find . -type f -mtime +10 -name "*txt" -exec cp {} OLD \;
	-exec只能够接受单个命令
让find跳过特定的目录
	find . \( -name ".git" -prune\) -o \( -type f -print)\
	\(-name ".git" -prune)\ 的作用是用于排除，它指明了排除.git目录 而后面致命了需要执行的动作
